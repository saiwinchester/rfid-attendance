/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendance;

import static attendance.RFIDConn.ino;
import com.panamahitek.ArduinoException;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author Sai
 */
public class MainAtt extends javax.swing.JFrame {
    private static Connection connection=null;
    private static Connection conn=null;
    public static String name=null;
    public static byte[] img=null;

    /**
     * Creates new form MainAtt
     */
    public MainAtt() {
        initComponents();
        connection=sqliteConnection.dbConnector();
        
        if(!jLabel3.getText().equals("")){
            
        }
        
         new Thread(){
        public void run(){
            while(true){
                    
                    Calendar cal=new GregorianCalendar();
                    int hour=cal.get(Calendar.HOUR);
                    int min=cal.get(Calendar.MINUTE);
                    int sec=cal.get(Calendar.SECOND);
                    int date=cal.get(Calendar.DATE);
                    int month=cal.get(Calendar.MONTH);
                    int month1=month+1;
                    int year=cal.get(Calendar.YEAR);
                    int AM_PM=cal.get(Calendar.AM_PM);
                    String Am_Pm="";
                    if(AM_PM==1){
                        
                        Am_Pm="PM";
                    }
                    else{
                        Am_Pm="AM";
                    }
                   jLabel1.setText(""+hour+":"+min+":"+sec+" "+Am_Pm); 
                   jLabel2.setText(""+date+"/"+month1+"/"+year);
                   
                  
                   
                   
                }
            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(" ");
        jLabel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jLabel3ComponentShown(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(" ");

        jLabel5.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(66, 66, 66)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new java.awt.GridBagConstraints());

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel3ComponentShown
      // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3ComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAtt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAtt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAtt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAtt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
           ino . arduinoRX ( "COM3" , 9600 , listener);
          } catch ( ArduinoException  |  SerialPortException ex) {
            Logger . getLogger ( RFIDConn . class . getName ()) . log ( Level . SEVERE , null , ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainAtt().setVisible(true);
            }
        });
    }
    
    private  static  final  SerialPortEventListener listener =  new  SerialPortEventListener () {
        @Override
        public  void  serialEvent ( SerialPortEvent  spe ) {
            
            try {

                if (ino . isMessageAvailable ()) {
               
                       jLabel3.setText(ino.printMessage());
                       
                       if(jLabel3.getText().equals("")){
                           System.out.print("NOthing found\n");
                       }
                       else{
                           
                       updatename();
                       upload();
                       System.out.print("Name is "+jLabel4.getText());
                     
                        }
                }
                      } catch ( SerialPortException  |  ArduinoException ex) {
                
                
                Logger . getLogger ("hey"+ RFIDConn . class . getName ()) . log ( Level . SEVERE , null , ex);
            }
            

//        }
           };
        

        

       
    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel jLabel1;
    private static javax.swing.JLabel jLabel2;
    private static javax.swing.JLabel jLabel3;
    private static javax.swing.JLabel jLabel4;
    private static javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private static void updatename() {
        try{
            String query4="select * from Members where Tag=?";
            PreparedStatement pst4=connection.prepareStatement(query4);
            pst4.setString(1,jLabel3.getText());
            
            ResultSet rs4=pst4.executeQuery();     
            
            name=rs4.getString("Name");
            img=rs4.getBytes("Image");
             jLabel4.setText(name);
            
            
            
            ImageIcon imageicon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(jLabel5.getWidth(),jLabel5.getHeight(), Image.SCALE_SMOOTH)); 
            jLabel5.setIcon(imageicon);
      
            
            
              
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
           
            
        }
    }
    
     
     
     private static void upload() {
             try {
            String query6=String.format("INSERT INTO Attend(Name,Date,Time) VALUES(?,?,?)");
            PreparedStatement pst=connection.prepareStatement(query6);
            pst.setString(1, jLabel4.getText());
            pst.setString(2, jLabel2.getText());
            pst.setString(3, jLabel1.getText());
            
                            pst.executeUpdate();
            System.out.print("\n Ho Gya aBhai \n");
            

        pst.close();
        }catch(Exception ev) {
            
            System.out.println("\n the issue is:"+ev);

        }
        }
}
